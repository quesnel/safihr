#Flax (F) crop management - MDE FARM

#Predicates

predicates { #Predicates list
	predicate {
		id = "FieldPenetrability_sup_38";
		type = "penetrability";
		parameter {	
		penetrability_operator = ">=";
      		penetrability_threshold = 38.0;
		}
	}

	predicate {
		id = "FieldPenetrability_inf_38";
		type = "penetrability";
		parameter {	
		penetrability_operator = "<";
     	   	penetrability_threshold = 38.0;
		}
	}
	
	predicate {
		id = "FieldPenetrability_inf_37";
		type = "penetrability";
		parameter {	
		penetrability_operator = "<";
     	  	 penetrability_threshold = 37.0;
		}
	}

	predicate {
		id = "rain_5";
		type = "rain";
		parameter {	
		rain_operator = "<=";
		rain_threshold = 5.0;
		}
	}

	predicate {
		id = "rain_2";
		type = "rain";
		parameter {	
		rain_operator = "<=";
		rain_threshold = 2.0;
		}
	}

	predicate {
		id = "2d_rain_10";
		type = "sum_rain";
		parameter {	
		sum_rain_operator = "<=";	
		sum_rain_number = 2.0;
        	sum_rain_threshold = 10;
		}
	}

	predicate {
		id = "2d_rain_1";
		type = "sum_rain";
		parameter {	
		sum_rain_operator = "<=";	
		sum_rain_number = 2.0;
        	sum_rain_threshold = 1.0;
		}
	}

	predicate {
		id = "2d_rain_3";
		type = "sum_rain";
		parameter {	
		sum_rain_operator = "<=";	
		sum_rain_number = 2.0;
        	sum_rain_threshold = 3.0;
		}
	}

	predicate {
		id = "4d_rain_7";
		type = "sum_rain";
		parameter {	
		sum_rain_operator = "<=";	
		sum_rain_number = 4.0;
        	sum_rain_threshold = 7.0;
		}
	}

	predicate {
		id = "4d_rain_5";
		type = "sum_rain";
		parameter {	
		sum_rain_operator = "<=";	
		sum_rain_number = 4.0;
        	sum_rain_threshold = 5.0;
		}
	}

	predicate {
		id = "PET_sup_1-5";
		type = "ETP";
		parameter {	
		ETP_operator = "<=";
		ETP_threshold = 1.5;
		}
	}
}


## Rules
rules { # Rules list

    rule {
        id = "Harvest_F";
        predicates = "FieldPenetrability_inf_37", "2d_rain_3";
    }

    rule {
        id = "Stripping_F";
        predicates = "2d_rain_1", "4d_rain_7";
    }

    rule {
        id = "turning_F";
        predicates = "2d_rain_1";
    }

    rule {
        id = "pressing_F";
        predicates = "2d_rain_1", "4d_rain_5", "PET_sup_1-5";
    }

    rule {
        id = "StublePlow_sub_optimal";
        predicates = "FieldPenetrability_sup_38", "rain_5", "2d_rain_10";
    }

    rule {
        id = "StublePlow_optimal";
        predicates = "FieldPenetrability_inf_38", "rain_5";
 }
}

## Activities
activities { # Activites list
    
    activity {
        id = "Harvest_F;
     temporal {
                minstart = "+1-7-10";
		maxstart = "+1-7-31";	#Actual first possible day of sowing is randomely chosen between minstart and maxstart
        }
        rules = "Harvest_F";
        ressources = 0;
	speed_ha_per_day = 10;
    }

  activity {
        id = "Stripping_F";   
        rules = "Stripping_F";
        ressources = 1;
	speed_ha_per_day = 10;
    }

 activity {
        id = "turning_F";   
        rules = "turning_F";
        ressources = 1;
	speed_ha_per_day = 10;
    }

 activity {
        id = "pressing_F";   
        rules = "pressing_F";
        ressources = 2;
	speed_ha_per_day = 6;
    }

    activity {
        id = "StublePlow_1_F;
        temporal {
                maxfinish = "+0-11-30";
        }
        rules = "StublePlow_sub_optimal", "StublePlow_optimal";
        ressources = 1;
	speed_ha_per_day = 20;
    }

activity {
        id = "StublePlow_2_F;
         temporal {
                maxfinish = "+0-11-30";
        }
        rules = "StublePlow_sub_optimal", "StublePlow_optimal";
        ressources = 1;
	speed_ha_per_day = 20;
    }

activity {
        id = "StublePlow_3_F;
        temporal {
                maxfinish = "+0-11-30";
        }
        rules = "StublePlow_sub_optimal", "StublePlow_optimal";
        ressources = 1;
	speed_ha_per_day = 20;
    }

}

## Precedences
precedences {
     precedence {
        type = FS;
        first = "Harvest_F;
        second = "Stripping_F;
	mintimelag = 10;
    }
  precedence {
        type = FS;
        first = "Stripping_F;
        second = "turning_F;
	mintimelag = 10;
    }
 precedence {
        type = FS;
        first = "turning_F;
        second = "pressing_F;
	mintimelag = 10;
    }

precedence {
        type = FS; 
        first = "??"; ## last activities of the preceding crop
        second = "StublePlow_1_F; 
    }
    precedence {
        type = FS;
        first = "StublePlow_1_F;
        second = "StublePlow_2_F;
	mintimelag = 15;
    }
 precedence {
        type = FS;
        first = "StublePlow_2_F;
        second = "StublePlow_3_F;
	mintimelag = 15;
    }
}    
